Execute (Start Unit: mkdir_if_needed):

Execute (- Using default journal directory):
    call bujo#Vader_MkdirIfNeeded()
    Assert isdirectory(bujo#Vader_GetJournalPath())
    call delete(bujo#Vader_GetJournalPath() , "rf")
    Assert !isdirectory(bujo#Vader_GetJournalPath() ), "Failed to delete test directory"

Execute (- Using uppercase journal name):
    call bujo#Vader_MkdirIfNeeded("VADER_UPPERCASE")
    Assert isdirectory(bujo#Vader_GetJournalPath("VADER_UPPERCASE"))
    call delete(bujo#Vader_GetJournalPath("VADER_UPPERCASE"), "rf")
    Assert !isdirectory(bujo#Vader_GetJournalPath("VADER_UPPERCASE")), "Failed to delete test directory"

Execute (- Using special characters):
    call bujo#Vader_MkdirIfNeeded('VADER_SPECIAL!"Â£$%^&*()\|,<>/?;''[]"/')
    Assert isdirectory(bujo#Vader_GetJournalPath("VADER_SPECIAL"))
    call delete(bujo#Vader_GetJournalPath("VADER_SPECIAL"), "rf")
    Assert !isdirectory(bujo#Vader_GetJournalPath("VADER_SPECIAL")), "Failed to delete test directory"
    
Execute (- Using space character):
    call bujo#Vader_MkdirIfNeeded("VADER SPACES")
    Assert isdirectory(bujo#Vader_GetJournalPath("VADER SPACES"))
    call delete(bujo#Vader_GetJournalPath("VADER SPACES"), "rf")
    Assert !isdirectory(bujo#Vader_GetJournalPath("VADER SPACES")), "Failed to delete test directory"
    
Execute (- Abort creation): 
    let g:bujo_vader_mkdir_choice = 0
    call bujo#Vader_MkdirIfNeeded("VADER THROWS")
    let g:bujo_vader_mkdir_choice = 1
    Assert !isdirectory(bujo#Vader_GetJournalPath("VADER THROWS")), "Created directory when it should have aborted"
